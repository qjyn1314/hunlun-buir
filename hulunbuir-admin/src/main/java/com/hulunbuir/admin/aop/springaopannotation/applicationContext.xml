<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        1、进行扫描，查找所需要创建的类
    -->
    <context:component-scan base-package="com.hulunbuir.admin.aop.springaopannotation"/>

    <!--
        2、将注解的aop切面类自动开启
         proxy-target-class:默认是false（JDK动态代理），true（CGLIB代理）
    -->
    <aop:aspectj-autoproxy/>

    <!--被代理的对象类-->
<!--    <bean id="springAnnUserService" class="SpringAnnUserServiceImpl"/>-->
    <!--aop切面类-->
<!--    <bean id="springAnnAdvice" class="SpringAnnAdvice"/>-->
    <!--
        SpringAop切面类的配置
    -->
    <!--<aop:config>
        <aop:aspect ref="springAnnAdvice">
            <aop:pointcut expression="execution( * com.hulunbuir.clam.admin.aop.springaopannotation.*.*(..))" id="xmlPointCut"/>
            <aop:before method="before" pointcut-ref="xmlPointCut"/>
            <aop:after method="after" pointcut-ref="xmlPointCut"/>
            <aop:after-returning method="afterReturning" pointcut-ref="xmlPointCut" returning="object"/>
            <aop:around method="around" pointcut-ref="xmlPointCut"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="xmlPointCut" throwing="throwable"/>
        </aop:aspect>
    </aop:config>-->

</beans>
