server.port=8026
spring.application.name=afternoon-dubbo-file-seata

server.undertow.direct-buffers=true
server.undertow.io-threads=5
server.undertow.worker-threads=150

spring.http.encoding.charset=UTF-8
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true

#Dubbo的配置
#dubbo提供者的别名，只是个标识
dubbo.application.name=afternoon-provider
#zk地址
dubbo.registry.address=zookeeper://47.104.78.115:4182
#dubbo协议
dubbo.protocol.name=dubbo
#duboo端口号
dubbo.protocol.port=20885
#这是你要发布到dubbo的接口所在包位置
dubbo.scan.base-packages=com.hulunbuir.clam.afternoon.provider

#数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://47.104.78.115:3308/king?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1234567
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
# 最大连接池数量
spring.datasource.druid.max-active=30
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=true
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=50
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计
spring.datasource.druid.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true

#mybatis-plus
#扫描的mapper的xml文件
mybatis-plus.mapper-locations=classpath:com/hulunbuir/clam/afternoon/persistence/mapper/xml/*Mapper.xml
#输出SQL
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.slf4j.Slf4jImpl

#seata分布式事务异常回滚，实现分布式事务的解决方案
spring.cloud.alibaba.seata.tx-service-group=${spring.application.name}

#spring-boot-admin-client的配置信息--参考：https://blog.csdn.net/it_lihongmin/article/details/95250519#2%E3%80%81Spring%20Boot%20Admin%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE
spring.boot.admin.client.url=http://127.0.0.1:8016
spring.boot.admin.client.instance.prefer-ip=true
spring.boot.admin.client.instance.name=Hulun-Buir-Prairie-Afternoon
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin
spring.security.user.name=admin
spring.security.user.password=admin
spring.boot.admin.client.instance.metadata.user.name=admin
spring.boot.admin.client.instance.metadata.user.password=admin
spring.jmx.enabled=true
management.endpoints.web.exposure.include=*
management.endpoints.web.base-path=/
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=false
management.endpoints.jmx.exposure.include=*
management.endpoints.jmx.exposure.exclude=*
#thymeleaf配置
#spring.thymeleaf.cache=false
#redis配置
spring.redis.database=1
spring.redis.host=47.104.78.115
spring.redis.port=6666
spring.redis.password=1234567
spring.redis.timeout=50000
spring.redis.lettuce.pool.max-active=10
spring.redis.lettuce.pool.max-idle=5
spring.redis.lettuce.pool.max-wait=10000
spring.redis.lettuce.pool.min-idle=3
